{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/component/home/home.component.ts","webpack:///src/app/component/home/home.component.html","webpack:///src/app/component/question/question.component.html","webpack:///src/app/component/question/question.component.ts","webpack:///src/app/component/review/review.component.ts","webpack:///src/app/component/review/review.component.html","webpack:///src/app/service/question.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","HomeComponent","QuestionComponent","questionService","listQuestion","currentIndex","numberCorrectAnswer","countdownTime","totalCompletionTime","getStart","resetListQuestionAnswered","setDefaultAnswer","setDefaultTime","setDefaultCompletionTime","setDefaultQuestionList","setDefaultData","closeModal","undefined","getListQuestion","setNextQuestion","reject","subscribe","object","results","error","isLastQuestion","length","setQuestionAnswered","stopCountdownTime","disPlayTimeOut","setTimeout","openModal","modal","document","getElementById","style","display","fire","text","icon","showConfirmButton","timer","answers","i","j","Math","floor","random","checkAnswerExistence","checkCorrectAnswer","incorrect_answers","correct_answer","currentQuestion","shuffleAnswers","intervalId","setInterval","countTime","clearInterval","setCompletionTime","answer","questionAnswered","selectedAnswer","addQuestionAnswered","incrementNumberCorrectAnswer","displayCorrect","displayInCorrect","submitAnswer","finnish","ReviewComponent","listQuestionAnswered","category","type","difficulty","question","getListQuestionAnswered","QuestionService","httpClient","API_PATH","get","push","console","log","providedIn","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {QuestionComponent} from './component/question/question.component';\r\nimport {HomeComponent} from './component/home/home.component';\r\nimport {ReviewComponent} from './component/review/review.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path: 'question/list',\r\n    component: QuestionComponent\r\n  },\r\n  {\r\n    path: 'review',\r\n    component: ReviewComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'quiz-app';\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './component/home/home.component';\r\nimport { QuestionComponent } from './component/question/question.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { ReviewComponent } from './component/review/review.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    QuestionComponent,\r\n    ReviewComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div  class=\"my-wrapper\">\r\n  <div class=\"my-row justify-content-center \" style=\"color: white; position: relative\">\r\n    <img style=\"width: 4em; height: auto; border-radius: 1em\"\r\n         src=\"https://th.bing.com/th/id/OIF.AjdgP5Jdni30JZzLnNGxxQ?pid=ImgDet&rs=1\" alt=\"image\">\r\n    <div class=\"my-row justify-content-center\">\r\n      <h2>Welcome to quiz!</h2>\r\n    </div>\r\n    <button class=\"my-button\" routerLink=\"question/list\">Start Now</button>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n","<div class=\"my-wrapper\">\r\n  <div [hidden]=\"listQuestion\" class=\"loader\"></div>\r\n  <table [hidden]=\"!listQuestion\" style=\"width: 30em\">\r\n    <tr>\r\n      <div class=\" my-row justify-content-center question-container\">\r\n        <div class=\"my-row justify-content-center\">\r\n          <h5 style=\"color: #b9ff5a\">Question {{currentIndex + 1}} / {{listQuestion.length}}:  </h5>\r\n        </div>\r\n        <p class=\"question\">{{currentQuestion.question}}</p>\r\n      </div>\r\n    </tr>\r\n    <tr>\r\n      <div class=\"d-flex justify-content-center\">\r\n        <h2 style=\"color: #ff4040\">{{countdownTime}}s </h2>\r\n      </div>\r\n\r\n    </tr>\r\n    <tr>\r\n      <div class=\"list-unstyled\">\r\n        <button (click)=\"setAnswer(answer)\" class=\"answer\" *ngFor=\"let answer of currentQuestion.answers\">{{answer}}</button>\r\n      </div>\r\n    </tr>\r\n    <tr>\r\n      <div class=\"d-flex justify-content-center\">\r\n        <button [hidden]=\"currentIndex >= listQuestion.length - 1\" class=\"my-button mt-4\" (click)=\"submitAnswer()\">Next</button>\r\n      </div>\r\n      <div class=\"d-flex justify-content-center\">\r\n        <button [hidden]=\"currentIndex < listQuestion.length - 1\" class=\"my-button mt-4\" (click)=\"finnish()\">Finish</button>\r\n      </div>\r\n    </tr>\r\n  </table>\r\n</div>\r\n\r\n<div id=\"myModal\" class=\"modal\">\r\n  <div class=\"modal-content\">\r\n    <h2>Congratulations</h2>\r\n    <p>You are amazing!</p>\r\n    <p>{{numberCorrectAnswer}}/{{listQuestion.length}} correct answers in {{totalCompletionTime}} seconds.</p>\r\n    <div class=\"button-container\">\r\n      <button id=\"playAgainButton\" class=\"my-button\" (click)=\"getStart()\">\r\n        Play Again</button>\r\n      <button id=\"reviewButton\" routerLink=\"/review\" class=\"my-button\">\r\n        Review</button>\r\n      <button id=\"homeButton\" routerLink=\"/\" class=\"my-button\">\r\n        Back Home</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Question} from '../../model/question';\r\nimport {QuestionService} from '../../service/question.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n@Component({\r\n  selector: 'app-question',\r\n  templateUrl: './question.component.html',\r\n  styleUrls: ['./question.component.css']\r\n})\r\nexport class QuestionComponent implements OnInit {\r\n\r\n  listQuestion: Question[] = [];\r\n  currentQuestion: Question;\r\n  currentIndex = -1;\r\n  numberCorrectAnswer = 0;\r\n  countdownTime = 30;\r\n  answer: string;\r\n  totalCompletionTime = 0;\r\n  intervalId: any;\r\n\r\n  constructor(private questionService: QuestionService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getStart();\r\n  }\r\n\r\n  setDefaultData() {\r\n    this.questionService.resetListQuestionAnswered();\r\n    this.setDefaultAnswer();\r\n    this.setDefaultTime();\r\n    this.setDefaultCompletionTime();\r\n    this.setDefaultQuestionList();\r\n  }\r\n\r\n  setDefaultCompletionTime() {\r\n    this.totalCompletionTime = 0;\r\n  }\r\n\r\n  setDefaultQuestionList() {\r\n    this.listQuestion = [];\r\n  }\r\n\r\n  async getStart() {\r\n    this.setDefaultData();\r\n    this.closeModal();\r\n    this.listQuestion = undefined;\r\n    this.currentIndex = -1;\r\n    this.setDefaultTime();\r\n    this.setDefaultAnswer();\r\n    await this.getListQuestion();\r\n    this.setNextQuestion();\r\n  }\r\n\r\n  getListQuestion(): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n      this.questionService.getListQuestion().subscribe(object => {\r\n        this.listQuestion = object.results;\r\n        resolve();\r\n      }, error => {\r\n        reject(error);\r\n      });\r\n    });\r\n  }\r\n\r\n  setDefaultTime() {\r\n    this.countdownTime = 30;\r\n  }\r\n\r\n  countTime(): void {\r\n    const isLastQuestion = this.currentIndex === this.listQuestion.length - 1;\r\n    if (this.countdownTime === 0) {\r\n      this.setQuestionAnswered();\r\n      if (isLastQuestion) {\r\n        this.stopCountdownTime();\r\n        this.disPlayTimeOut();\r\n        setTimeout(() => {\r\n          this.openModal();\r\n        }, 1000);\r\n      } else {\r\n        this.stopCountdownTime();\r\n        this.disPlayTimeOut();\r\n        setTimeout(() => this.setNextQuestion(), 1000);\r\n      }\r\n    } else {\r\n      this.countdownTime--;\r\n    }\r\n  }\r\n\r\n  openModal() {\r\n    const modal = document.getElementById('myModal');\r\n    if (modal) {\r\n      modal.style.display = 'block';\r\n    }\r\n  }\r\n\r\n  closeModal() {\r\n    const modal = document.getElementById('myModal');\r\n    if (modal) {\r\n      modal.style.display = 'none';\r\n    }\r\n  }\r\n\r\n  disPlayTimeOut() {\r\n    Swal.fire({\r\n      text: 'Time out!',\r\n      icon: 'error',\r\n      showConfirmButton: false,\r\n      timer: 1000\r\n    });\r\n  }\r\n\r\n  shuffleAnswers(answers: string[]): string[] {\r\n    for (let i = 0; i < answers.length - 1; i++) {\r\n      const j = Math.floor(Math.random() * answers.length);\r\n      [answers[i], answers[j]] = [answers[j], answers[i]];\r\n    }\r\n    return answers;\r\n  }\r\n\r\n  submitAnswer() {\r\n    if (this.checkAnswerExistence()) {\r\n      this.stopCountdownTime();\r\n      this.checkCorrectAnswer();\r\n      this.setQuestionAnswered();\r\n      this.setDefaultAnswer();\r\n      setTimeout(() => this.setNextQuestion(), 1000);\r\n    } else {\r\n      Swal.fire({\r\n        text: 'Please choose answer!',\r\n        icon: 'error',\r\n        showConfirmButton: false,\r\n        timer: 1000\r\n      });\r\n    }\r\n  }\r\n\r\n  finnish() {\r\n    if (this.checkAnswerExistence()) {\r\n      this.stopCountdownTime();\r\n      this.checkCorrectAnswer();\r\n      this.setQuestionAnswered();\r\n      this.setDefaultAnswer();\r\n      setTimeout(() => this.openModal(), 1000);\r\n    } else {\r\n      Swal.fire({\r\n        text: 'Please choose answer!',\r\n        icon: 'error',\r\n        showConfirmButton: false,\r\n        timer: 1000\r\n      });\r\n    }\r\n  }\r\n\r\n  setNextQuestion() {\r\n    if (this.currentIndex < this.listQuestion.length - 1) {\r\n      this.currentIndex++;\r\n    }\r\n    const answers = [...this.listQuestion[this.currentIndex].incorrect_answers, this.listQuestion[this.currentIndex].correct_answer];\r\n    this.currentQuestion = {\r\n      ...this.listQuestion[this.currentIndex],\r\n      answers: this.shuffleAnswers(answers)\r\n    };\r\n    this.intervalId = setInterval(() => this.countTime(), 1000);\r\n  }\r\n\r\n  stopCountdownTime() {\r\n    clearInterval(this.intervalId);\r\n    this.setCompletionTime();\r\n    this.setDefaultTime();\r\n  }\r\n\r\n  setDefaultAnswer() {\r\n    this.answer = undefined;\r\n  }\r\n\r\n  setCompletionTime() {\r\n    this.totalCompletionTime += 30 - this.countdownTime;\r\n  }\r\n\r\n  checkAnswerExistence(): boolean {\r\n    return this.answer !== undefined;\r\n  }\r\n\r\n  setAnswer(answer: string) {\r\n    this.answer = answer;\r\n  }\r\n\r\n  incrementNumberCorrectAnswer() {\r\n    this.numberCorrectAnswer++;\r\n  }\r\n\r\n  setQuestionAnswered() {\r\n    const questionAnswered = {...this.currentQuestion, selectedAnswer: this.answer};\r\n    this.questionService.addQuestionAnswered(questionAnswered);\r\n    this.answer = undefined;\r\n  }\r\n\r\n  checkCorrectAnswer() {\r\n    if (this.currentQuestion.correct_answer === this.answer) {\r\n      this.incrementNumberCorrectAnswer();\r\n      this.displayCorrect();\r\n    } else {\r\n      this.displayInCorrect();\r\n    }\r\n  }\r\n\r\n  displayCorrect() {\r\n    Swal.fire({\r\n      text: 'Correct!!!',\r\n      icon: 'success',\r\n      showConfirmButton: false,\r\n      timer: 1000\r\n    });\r\n  }\r\n\r\n  displayInCorrect() {\r\n    Swal.fire({\r\n      text: 'Incorrect!',\r\n      icon: 'error',\r\n      showConfirmButton: false,\r\n      timer: 1000\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Question} from '../../model/question';\r\nimport {QuestionService} from '../../service/question.service';\r\n\r\n@Component({\r\n  selector: 'app-review',\r\n  templateUrl: './review.component.html',\r\n  styleUrls: ['./review.component.css']\r\n})\r\nexport class ReviewComponent implements OnInit {\r\n  listQuestionAnswered: Question[] = [\r\n    {\r\n      category: 'a',\r\n      type: 'a',\r\n      difficulty: 'a',\r\n      question: 'Question Question Question Question Question Question Question Question',\r\n      correct_answer: 'a',\r\n      incorrect_answers: [\r\n        'a', 'b', 'c'\r\n      ],\r\n      answers: [\r\n        'a', 'b', 'c', 'd'\r\n      ],\r\n      selectedAnswer: ['d']\r\n    },\r\n    {\r\n      category: 'a',\r\n      type: 'a',\r\n      difficulty: 'a',\r\n      question: 'Question',\r\n      correct_answer: 'a',\r\n      incorrect_answers: [\r\n        'a', 'b', 'c'\r\n      ],\r\n      answers: [\r\n        'a', 'b', 'c', 'd'\r\n      ],\r\n      selectedAnswer: ['d']\r\n    },\r\n    {\r\n      category: 'a',\r\n      type: 'a',\r\n      difficulty: 'a',\r\n      question: 'Question',\r\n      correct_answer: 'a',\r\n      incorrect_answers: [\r\n        'a', 'b', 'c'\r\n      ],\r\n      answers: [\r\n        'a', 'b', 'c', 'd'\r\n      ],\r\n      selectedAnswer: ['a']\r\n    }\r\n  ];\r\n\r\n  constructor(private questionService: QuestionService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.listQuestionAnswered = this.questionService.getListQuestionAnswered();\r\n  }\r\n\r\n  openModal() {\r\n    const modal = document.getElementById('myModal');\r\n    if (modal) {\r\n      modal.style.display = 'block';\r\n    }\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center\">\r\n  <div class=\"loader-container\" [hidden]=\"listQuestionAnswered\">\r\n    <div class=\"loader\"></div>\r\n  </div>\r\n  <div [hidden]=\"listQuestionAnswered.length < 1\">\r\n    <div class=\"question-container\" *ngFor=\"let questionAnswered of listQuestionAnswered; index as i\">\r\n      <div class=\"question-review\">\r\n        <p>{{i + 1}}. {{questionAnswered.question}}</p>\r\n      </div>\r\n      <div class=\"answer-list\">\r\n        <button\r\n          *ngFor=\"let answer of questionAnswered.answers\"\r\n          [class.answer-review]=\"answer != questionAnswered.selectedAnswer\"\r\n          [class.answer-correct-review]=\"answer == questionAnswered.selectedAnswer && questionAnswered.selectedAnswer == questionAnswered.correct_answer\"\r\n          [class.answer-incorrect-review]=\"answer == questionAnswered.selectedAnswer && questionAnswered.selectedAnswer != questionAnswered.correct_answer\"\r\n        >\r\n          {{answer}}\r\n        </button>\r\n        <div\r\n          class=\"correct\"\r\n          [hidden]=\"questionAnswered.selectedAnswer == questionAnswered.correct_answer\"\r\n        >\r\n          The correct answer is: {{questionAnswered.correct_answer}}\r\n        </div>\r\n        <div\r\n          class=\"correct\"\r\n          [hidden]=\"questionAnswered.selectedAnswer != questionAnswered.correct_answer\"\r\n        >\r\n          Your answer is correct!\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"d-flex justify-content-center mb-5\">\r\n      <button class=\"my-button\" (click)=\"openModal()\">Finnish Review</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div id=\"myModal\" class=\"modal\">\r\n  <div class=\"modal-content\">\r\n    <div class=\"button-container\">\r\n      <button id=\"playAgainButton\" class=\"my-button\" routerLink=\"/question/list\">\r\n        Play Again</button>\r\n      <button id=\"homeButton\" routerLink=\"/\" class=\"my-button\">\r\n        Back Home</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Question} from '../model/question';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuestionService {\r\n  private API_PATH = 'https://opentdb.com/api.php';\r\n  private listQuestionAnswered: Question[] = [];\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n\r\n  getListQuestion(): Observable<any> {\r\n    return this.httpClient.get<any>(this.API_PATH + '?amount=5');\r\n  }\r\n\r\n  addQuestionAnswered(questionAnswered: Question) {\r\n    this.listQuestionAnswered.push(questionAnswered);\r\n    console.log('add/n' + this.listQuestionAnswered);\r\n  }\r\n\r\n  getListQuestionAnswered(): Question[] {\r\n    return this.listQuestionAnswered;\r\n  }\r\n\r\n  resetListQuestionAnswered() {\r\n    this.listQuestionAnswered = [];\r\n    console.log('reset/n' + this.listQuestionAnswered);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}